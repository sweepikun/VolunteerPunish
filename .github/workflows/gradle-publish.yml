name: Publish Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release Tag (e.g. v1.0.0)'
        required: true
        type: string
      upload_artifacts:
        description: 'Upload build artifacts?'
        required: false
        type: boolean
        default: true

permissions:
  contents: write

jobs:
  publish-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 👇 替换 gradlew：安装 Gradle（官方推荐方式）
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: '8.7'  # 👈 请根据你的项目需要修改版本号（如 7.6, 8.0, 8.7 等）
          # 可选：缓存依赖（推荐）
          cache-read-only: false

      # 👇 使用 gradle 命令代替 ./gradlew
      - name: Build with Gradle
        run: gradle build --no-daemon  # --no-daemon 适合 CI 环境

      # 查找构建产物（JAR 文件）
      - name: Find build artifacts
        id: find_artifacts
        run: |
          ARTIFACTS=$(find build/libs -type f -name "*.jar" ! -name "*-sources.jar" ! -name "*-javadoc.jar" | tr '\n' ' ')
          if [ -z "$ARTIFACTS" ]; then
            echo "No main JAR artifacts found!" >&2
            exit 1
          fi
          echo "ARTIFACTS=$ARTIFACTS" >> $GITHUB_ENV

      # 创建 GitHub Release
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && inputs.tag_name || github.ref_name }}
          files: ${{ env.ARTIFACTS }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
